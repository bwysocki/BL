package pl.stalostech.service;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import pl.stalostech.app.TestApplication;
import pl.stalostech.autogenerated.xsd.model.Configuration;
import pl.stalostech.autogenerated.xsd.model.Model;
import pl.stalostech.model.ConfigurationModel;
import pl.stalostech.testutils.ModelFactory;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = TestApplication.class)
public class DozerMapperServiceTest {

	@Autowired
	private DozerMapperService dozerMapperService;

	@Autowired
	private ModelFactory modelFactory;

	@Test
	public void testMapDbEntityToSoapModelNoDbEntity() {
		assertNotNull(dozerMapperService.mapDbEntityToSoapModel(null));
	}

	@Test
	public void testMapDbEntityToSoapModelEmptyDbEntity() {
		assertNotNull(dozerMapperService.mapDbEntityToSoapModel(new ConfigurationModel()));
	}

	@Test
	public void testMapDbEntityToSoapModel() {
		ConfigurationModel dbEntity = modelFactory.getSampleConfigurationModel();
		Configuration soapModel = dozerMapperService.mapDbEntityToSoapModel(dbEntity);
		assertNotNull(soapModel);
		assertEquals(dbEntity.getFps(), soapModel.getFps());
		assertEquals(dbEntity.getLogoColor(), soapModel.getLogoColor());
		assertEquals(dbEntity.getModel() == 1 ? Model.LOGO : Model.CAR, soapModel.getModel());
		assertEquals(dbEntity.getThreshold(), soapModel.getThreshold());
	}

	@Test
	public void testUpdateDbEntityWithSoapModelNoDbEntity() {
		ConfigurationModel dbEntity = null;
		Configuration soapModel = modelFactory.getSampleConfiguration();
		dozerMapperService.updateDbEntityWithSoapModel(dbEntity, soapModel);
		assertNull(dbEntity);
	}

	@Test
	public void testUpdateDbEntityWithSoapModelNoSoapModel() {
		ConfigurationModel dbEntity = modelFactory.getSampleConfigurationModel();
		Configuration soapModel = null;
		dozerMapperService.updateDbEntityWithSoapModel(dbEntity, soapModel);
		assertNotNull(dbEntity);
		assertEquals(0, dbEntity.getFps());
		assertNull(dbEntity.getLogoColor());
		assertEquals(Model.LOGO, dbEntity.getModel() == 1 ? Model.LOGO : Model.CAR);
		assertEquals(0, dbEntity.getThreshold());
	}

	@Test
	public void testUpdateDbEntityWithSoapModel() {
		ConfigurationModel dbEntity = modelFactory.getSampleConfigurationModel();
		Configuration soapModel = modelFactory.getSampleConfiguration();
		dozerMapperService.updateDbEntityWithSoapModel(dbEntity, soapModel);
		assertNotNull(dbEntity);
		assertEquals(soapModel.getFps(), dbEntity.getFps());
		assertEquals(soapModel.getLogoColor(), dbEntity.getLogoColor());
		assertEquals(soapModel.getModel(), dbEntity.getModel() == 1 ? Model.LOGO : Model.CAR);
		assertEquals(soapModel.getThreshold(), dbEntity.getThreshold());
		assertEquals(soapModel.isThresholdChecked(), dbEntity.isThresholdChecked());
	}

}
