package pl.stalostech.service;

import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.Queue;
import javax.jms.Session;

import org.dozer.DozerBeanMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.jms.core.JmsTemplate;
import org.springframework.jms.core.MessageCreator;
import org.springframework.stereotype.Service;

import pl.stalostech.autogenerated.xsd.model.Configuration;
import pl.stalostech.model.ConfigurationModel;
import pl.stalostech.repository.ConfigurationRepository;

/**
 * Service for configuration.
 * 
 * @author Bartosz Wysocki
 */
@Service
public class ConfigurationService {

	private final static String DOZER_SECTION = "configuration";

	@Autowired
	private ConfigurationRepository repository;

	@Autowired
	private MongoTemplate mongoTemplate;

	@Autowired
	private DozerBeanMapper dozer;

	@Autowired
	private JmsTemplate jmsTemplate;

	@Autowired
	private Queue blQueue;

	public Configuration getConfigurationFromDb() {
		Configuration r = new Configuration();
		dozer.map(repository.findConfiguration(), r, DOZER_SECTION);
		return r;
	}

	public void storeConfigurationInDb(final Configuration configuration) {
		ConfigurationModel dbRecord = repository.findConfiguration();
		dozer.map(configuration, dbRecord, DOZER_SECTION);

		jmsTemplate.send(blQueue, new MessageCreator() {
			@Override
			public Message createMessage(Session session) throws JMSException {
				return session.createObjectMessage(configuration);
			}
		});

		mongoTemplate.save(dbRecord);
	}

}
